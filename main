// 1. Require all your role modules
const roleHarvester = require('role.harvester');
const roleUpgrader = require('role.upgrader');
const roleBuilder = require('role.builder');
const rolefab = require('role.fab');
const roleupt = require('role.upt');
const roleh2 = require('role.h2');

// 2. Simply require the Traveler file. It sets itself up automatically.
require('Traveler');


module.exports.loop = function () {

    // Clear memory of dead creeps
    for (const name in Memory.creeps) {
        if (!Game.creeps[name]) {
            delete Memory.creeps[name];
            console.log('Clearing non-existing creep memory:', name);
        }
    }

    // --- Spawning Logic ---
    // This section can be simplified, but is functional for now.
    const harvesters = _.filter(Game.creeps, (creep) => creep.memory.role == 'harvester');
    if (harvesters.length < 4) {
        const newName = 'Harvester' + Game.time;
        Game.spawns['S1'].spawnCreep([WORK, WORK, CARRY, MOVE, MOVE, CARRY, WORK, CARRY], newName,
            { memory: { role: 'harvester' } });
    }
    
    //const h2s = _.filter(Game.creeps, (creep) => creep.memory.role == 'h2');
    //if (h2s.length < 1) {
    //    const newName = 'H2' + Game.time;
    //    Game.spawns['S1'].spawnCreep([WORK, CARRY, MOVE, MOVE, CARRY, MOVE, CARRY, CARRY], newName,
    //         { memory: { role: 'h2' } });
    //}

    const upgraders = _.filter(Game.creeps, (creep) => creep.memory.role == 'upgrader');
    if (upgraders.length < 4) {
        const newName = 'Upgrader' + Game.time;
        Game.spawns['S1'].spawnCreep([WORK, CARRY, MOVE, MOVE, CARRY, MOVE, MOVE, WORK], newName,
            { memory: { role: 'upgrader' } });
    }

    const upts = _.filter(Game.creeps, (creep) => creep.memory.role == 'upt');
    if (upts.length < 2) {
        const newName = 'upts' + Game.time;
        Game.spawns['S1'].spawnCreep([WORK, CARRY, MOVE, MOVE, CARRY, MOVE, CARRY, CARRY, MOVE], newName,
            { memory: { role: 'upt' } });
    }

    const fabs = _.filter(Game.creeps, (creep) => creep.memory.role == 'fab');
    if (fabs.length < 2) {
        const newName = 'fabs' + Game.time;
        Game.spawns['S1'].spawnCreep([WORK, WORK, CARRY, MOVE, MOVE, CARRY, MOVE, MOVE], newName,
            { memory: { role: 'fab' } });
    }

    // --- Visual Spawning Text ---
    if (Game.spawns['S1'].spawning) {
        const spawningCreep = Game.creeps[Game.spawns['S1'].spawning.name];
        Game.spawns['S1'].room.visual.text(
            '🛠️' + spawningCreep.memory.role,
            Game.spawns['S1'].pos.x + 1,
            Game.spawns['S1'].pos.y,
            { align: 'left', opacity: 0.8 });
    }

    // --- Creep Logic Execution Loop (Corrected) ---
    for (const name in Game.creeps) {
        const creep = Game.creeps[name];
        if (creep.memory.role == 'harvester') {
            roleHarvester.run(creep);
        }
         if (creep.memory.role == 'h2') {
            roleHarvester.run(creep);
        }
        else if (creep.memory.role == 'upgrader') {
            roleUpgrader.run(creep);
        }
        else if (creep.memory.role == 'builder') {
            roleBuilder.run(creep);
        }
        else if (creep.memory.role == 'fab') {
            rolefab.run(creep);
        }
        else if (creep.memory.role == 'upt') {
            roleupt.run(creep);
        }
    }
}