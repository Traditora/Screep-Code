var roleupt = {

    /** @param {Creep} creep **/
    run: function(creep) {

        // State machine logic
        if (creep.memory.upgrading && creep.store.getUsedCapacity() == 0) {
            creep.memory.upgrading = false;
            creep.say('ðŸ”„ withdraw');
        }
        if (!creep.memory.upgrading && creep.store.getFreeCapacity() == 0) {
            creep.memory.upgrading = true;
            creep.say('âš¡ upgrade');
        }

        if (creep.memory.upgrading) {
            // If upgrading, move to the controller and upgrade it
            if (creep.upgradeController(creep.room.controller) == ERR_NOT_IN_RANGE) {
                creep.travelTo(creep.room.controller, { visualizePathStyle: { stroke: '#ffffff' } });
            }
        } 
        else {
            // Find the closest structure that has energy
            var source = creep.pos.findClosestByPath(FIND_STRUCTURES, {
                filter: (s) => (s.structureType == STRUCTURE_SPAWN ||
                                s.structureType == STRUCTURE_CONTAINER ||
                                s.structureType == STRUCTURE_STORAGE) &&
                                s.store.getUsedCapacity(RESOURCE_ENERGY) > 0
            });
            
            // If a valid source is found, withdraw from it
            if (source) {
                if (creep.withdraw(source, RESOURCE_ENERGY) == ERR_NOT_IN_RANGE) {
                    creep.travelTo(source, { visualizePathStyle: { stroke: '#ffaa00' } });
                }
            }
        }
    }
};

module.exports = roleupt;
